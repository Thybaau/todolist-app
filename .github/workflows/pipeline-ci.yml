# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI/CD

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build_and_run_api:
    name: Build an Run Go API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version : '1.18'
      
      - name: Unit tests
        working-directory: ./server/tests
        run: go test -v

  deploy:
    name: Deploy locally
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start app
        run: |
          docker compose up -d
          sleep 10
    
      - name: Check if API is running
        run: |
          curl -sSf http://localhost:8080/
          if [ $? -eq 0 ]; then
            echo "API is running correctly"
          else
            echo "API is not running"
            exit 1
          fi

      - name: Check database container
        run: |
          docker compose ps -q todolist-db | grep -q .
          if [ $? -eq 0 ]; then
            echo "Database container is running"
          else
            echo "Database container is not running"
            exit 1
          fi

  test_job_3:
    name: Test Job 3
    runs-on: ubuntu-latest
    steps:
      - name: Run echo command
        run: echo "Running Test Job 3"
    # - name: Test
    #   run: go test -v ./...
  
          
